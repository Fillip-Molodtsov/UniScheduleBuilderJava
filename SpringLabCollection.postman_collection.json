{
	"info": {
		"_postman_id": "77996438-6a85-4a37-a436-eaf371133462",
		"name": "SpringLabCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Authorization is present\", function () {",
							"    pm.response.to.have.header(\"Authorization\");",
							"});",
							"pm.collectionVariables.set(\"token\", postman.getResponseHeader(\"Authorization\") );"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\":\"Pas2word\"\r\n}"
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Intervals",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.add({key: 'Authorization', value: pm.collectionVariables.get('token')});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response is an Array', () => ",
							"    pm.expect(pm.response.json()).to.be.an('array').but.not.an('object')",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/v1/sub/time-intervals",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"sub",
						"time-intervals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create subject",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// pm.request.headers.add({key: 'Authorization', value: pm.collectionVariables.get('token')});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No token - forbidden access\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Access Denied\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"hgfjft\",\r\n    \"lecturer\": \"ytjrt uytrkuy yti\",\r\n    \"practitioner\": \"urtjry uyrk8y yur\"\r\n}"
				},
				"url": {
					"raw": "localhost:8080/api/v1/sub",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"sub"
					]
				}
			},
			"response": []
		},
		{
			"name": "Full Subject",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.add({key: 'Authorization', value: pm.collectionVariables.get('token')});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is present - userId is stored\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.eql(1);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/v1/sub/1/full",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"sub",
						"1",
						"full"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete subject",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.add({key: 'Authorization', value: pm.collectionVariables.get('token')});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"NoSuchSubjectException - Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/v1/sub/50",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"sub",
						"50"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}